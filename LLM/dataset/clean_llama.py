import re
import os

# --- Configuration ---
# The file generated by the Llama model that needs cleaning.
INPUT_FILENAME = "llama3.1_questions.txt" 
# The cleaned output will be saved to this new file.
OUTPUT_FILENAME = "llama3.1_questions_cleaned.txt"

def clean_llama_block(block_text):
    """
    Processes a single block of text containing one situation and its questions.
    Cleans filler text and renumbers the questions correctly.
    """
    if not block_text.strip():
        return ""

    lines = block_text.strip().split('\n')
    situation_line = lines[0]
    question_lines = lines[1:]
    
    # Define a robust regex pattern to find and filter out conversational filler.
    # This looks for lines that start with a number/bullet, then phrases like
    # "Here is", "Here's", "Here are", etc., case-insensitively.
    filter_pattern = re.compile(r"^\s*[\d\.]*\s*(here['’]s|here is|here are)\b.*", re.IGNORECASE)

    cleaned_questions = []
    question_num = 1
    
    for line in question_lines:
        # 1. Check if the line is filler text. If so, skip it.
        if filter_pattern.match(line):
            continue
            
        # 2. Extract the actual question text, removing old numbers/bullets.
        text_only = re.sub(r'^\s*[\*\-\•\d]+\.?\)?\s*', '', line).strip()
        
        # 3. If there's valid text, re-number it and add to our list.
        if text_only:
            cleaned_questions.append(f"{question_num}. {text_only}")
            question_num += 1
            
    # 4. Combine the original situation line with the newly cleaned and numbered questions.
    return f"{situation_line}\n" + "\n".join(cleaned_questions)

def process_llama_file():
    """
    Main function to read the entire file, split it into blocks,
    process each block, and save the result.
    """
    print(f"Reading Llama output from: {INPUT_FILENAME}")
    try:
        with open(INPUT_FILENAME, 'r', encoding='utf-8') as f:
            content = f.read()
    except FileNotFoundError:
        print(f"Error: The file '{INPUT_FILENAME}' was not found.")
        print("Please ensure the file is in the same directory and the name is correct.")
        return

    # Split the file content into blocks. Each block starts with a numbered situation.
    # We use a regex that splits the text based on the pattern of a blank line 
    # followed by a numbered line, which separates our situations.
    blocks = re.split(r'\n\s*\n(?=\d+\.)', content)
    
    print(f"Identified {len(blocks)} situation blocks to process...")
    
    # Process each block individually using our cleaning function
    cleaned_blocks = [clean_llama_block(block) for block in blocks]
    
    # Join the cleaned blocks back together with double newlines for spacing
    final_output = "\n\n".join(cleaned_blocks)
    
    print(f"Writing cleaned and corrected output to: {OUTPUT_FILENAME}")
    with open(OUTPUT_FILENAME, 'w', encoding='utf-8') as f:
        f.write(final_output)

    print("\nLlama file cleaning complete.")
    print(f"Check '{OUTPUT_FILENAME}' for the corrected output.")

if __name__ == "__main__":
    process_llama_file()
